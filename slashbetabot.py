from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup,InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton,ContentType
from datetime import datetime
from userfile import id_base,username_base,create_file,put_msg_base,get_put
import pathlib
from pathlib import Path
from cases import cases_base
from uslugi import uslugi_base
#–ú–ê–®–ò–ù–ê –°–û–°–¢–û–Ø–ù–ò–ô
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.contrib.fsm_storage.memory import MemoryStorage

#–ú–ê–®–ò–ù–ê –°–û–°–¢–û–Ø–ù–ò–ô
storage=MemoryStorage()

"6233960605:AAFiiu2k_HZFN27vFvbZ8ITCtNcxRzFcxRA"
"5952524685:AAHamVB4b9BSG_GefeR5hQXpMPqIpRmEYwM"



admin=5965231899
bot=Bot(token="5856871549:AAFtXMLTLmtFMeZt57-wrsZHqhCEY8xz-LM",parse_mode="HTML")
dp=Dispatcher(bot,storage=MemoryStorage())

statisticbot=Bot(token="6343517427:AAEGBQd0ytfuraaalMR9xQw5evLxHuQ4yqU",parse_mode="HTML")
dp_statistics=Dispatcher(statisticbot)


rkbmenu=ReplyKeyboardMarkup(resize_keyboard=True)
btn1=KeyboardButton("üîó–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
rkbmenu.add(btn1)

last_msg_base={}
check_base={}



time=0
async def get_time():
    global time
    time = datetime.now().strftime("%D %H:%M:%S")

#START
@dp.message_handler(commands="start")
async def start(message: types.Message):

    await message.delete()

    if str(message.from_user.id) in last_msg_base:
        await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    ikb=InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üí¨ –û–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç",callback_data="callmanager")
    btn3 = InlineKeyboardButton("ü´Ä–ù–∞—à–∏ —É—Å–ª—É–≥–∏", callback_data="uslugi")
    btn4 = InlineKeyboardButton("üìé –ö–µ–π—Å—ã", callback_data="cases")
    btn2 = InlineKeyboardButton("üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="price")

    ikb.row(btn1).row(btn2).row(btn3).row(btn4)

    if message.from_user.id not in id_base:
        id_base.append(message.from_user.id)
        username_base.append("@"+message.from_user.username)
        inbase = "–Ω–æ–≤–∏—á–æ–∫"
    else:
        inbase="–±—ã–≤–∞–ª—ã–π"
    png=open(Path(dir_path,"photo","startphoto.png"),"rb")
    msg = await bot.send_photo(chat_id=message.from_user.id,
                               photo=png,
                               caption="–ü—Ä–∏–≤–µ—Ç! –ú—ã - <b>Slash <i>Digital</i></b>\n\n"
                               "–ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –º–µ–¥–∏–∞-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.\n\n"
                               "<span class='tg-spoiler'>–ú—ã –¥–µ–ª–∞–µ–º —Å–∞–π—Ç—ã, <i>–¥–∏–∑–∞–π–Ω</i>, –∞–Ω–∏–º–∞—Ü–∏–∏, <i>SMM</i> –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–æ—â–Ω—ã—Ö –±–æ—Ç–æ–≤</span>",
                               reply_markup=ikb)
    png.close()


    await get_time()
    if str(message.from_user.id) not in put_msg_base:
        put_msg_base[str(message.from_user.id)]=""
    put_msg_base[str(message.from_user.id)]+=(f"{time}: –í–æ—à—ë–ª –≤ –±–æ—Ç–∞\n")

    last_msg=msg.message_id
    last_msg_base[str(message.from_user.id)]=str(last_msg)
    await statisticbot.send_message(chat_id=admin,text=f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å\n"
                                                       f"–í –±–∞–∑–µ —Å–µ–π—á–∞—Å {len(id_base)} —á–µ–ª–æ–≤–µ–∫\n\n"
                                                       f"<b>–±–æ—Ç:</b> @slashdigital_bot\n"
                                                       f"<b>—é–∑–µ—Ä–Ω–µ–π–º:</b> @{message.from_user.username}\n"
                                                       f"<b>–∞–π–¥–∏:</b> {message.from_user.id}\n"
                                                       f"<b>–¥–∞—Ç–∞:</b> {time}\n"
                                                       f"<b>—Å—Ç–∞—Ç—É—Å:</b> {inbase}")

    await create_file()
    await statisticbot.send_document(chat_id=admin,document=open("idfile.txt","rb"))
    await statisticbot.send_document(chat_id=admin, document=open("userfile.txt", "rb"))


#–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ
@dp.callback_query_handler(text="mainmenu")
async def open_menu(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üí¨ –û–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç", callback_data="callmanager")
    btn3 = InlineKeyboardButton("ü´Ä –ù–∞—à–∏ —É—Å–ª—É–≥–∏", callback_data="uslugi")
    btn4 = InlineKeyboardButton("üìé –ö–µ–π—Å—ã", callback_data="cases")
    btn2 = InlineKeyboardButton("üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å", callback_data="price")

    ikb.row(btn1).row(btn2).row(btn3).row(btn4)

    png = open(Path(dir_path, "photo", "startphoto.png"), "rb")
    msg = await bot.send_photo(chat_id=message.from_user.id,
                               photo=png,
                               caption="–ü—Ä–∏–≤–µ—Ç! –ú—ã - <b>Slash <i>Digital</i></b>\n\n"
                                       "–ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –º–µ–¥–∏–∞-–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.\n\n"
                                       "<span class='tg-spoiler'>–ú—ã –¥–µ–ª–∞–µ–º —Å–∞–π—Ç—ã, <i>–¥–∏–∑–∞–π–Ω</i>, –∞–Ω–∏–º–∞—Ü–∏–∏, <i>SMM</i> –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–æ—â–Ω—ã—Ö –±–æ—Ç–æ–≤</span>",
                               reply_markup=ikb)
    png.close()

    await get_time()
    put_msg_base[str(message.from_user.id)]+=(f"{time}: –í–æ—à—ë–ª –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n")

    last_msg = msg.message_id
    last_msg_base[str(message.from_user.id)] = str(last_msg)

#–û–ë–°–£–î–ò–¢–¨ –ü–†–û–ï–ö–¢
@dp.callback_query_handler(text="callmanager")
async def manager(callback: types.CallbackQuery):

    await bot.delete_message(chat_id=callback.from_user.id, message_id=last_msg_base[str(callback.from_user.id)])

    ikb=InlineKeyboardMarkup()
    btn0 = InlineKeyboardButton("üìé –ö–µ–π—Å—ã", callback_data="cases")
    btn2=InlineKeyboardButton("üíª –°–∞–π—Ç",url="https://slashdigital.ru/",callback_data="go_to_site")
    btn3=InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",callback_data="mainmenu")
    ikb.row(btn0).row(btn2).row(btn3)

    png = open(Path(dir_path, "photo", "schet.png"), "rb")
    msg = await bot.send_photo(chat_id=callback.from_user.id,
                               caption="–û—Ç–ª–∏—á–Ω–æ! –°–∫–æ—Ä–æ –≤–∞–º –Ω–∞–ø–∏—à–µ—Ç –Ω–∞—à –º–µ–≥–∞–ø—Ä–∏—è—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä\n\n"
                                       "–ê –ø–æ–∫–∞ –º–æ–∂–µ—Ç–µ –ø–æ–ª–∞–∑–∏—Ç—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –±–æ—Ç–∞",
                               reply_markup=ikb,
                               photo=png)
    png.close()

    last_msg = msg.message_id
    last_msg_base[str(callback.from_user.id)] = str(last_msg)

    await get_time()
    put_msg_base[str(callback.from_user.id)]+=(f"{time}: –•–æ—á–µ—Ç –æ–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–µ–∫—Ç\n")

    await statisticbot.send_message(chat_id=admin,
                                    text=f"@{callback.from_user.username} —Ö–æ—á–µ—Ç –ø–æ–æ–±—â–∞—Ç—å—Å—è")

#–†–ê–°–°–ß–ò–¢–ê–¢–¨ –°–¢–û–ò–ú–û–°–¢–¨ –£–°–õ–£–ì–ò
@dp.callback_query_handler(text="price")
async def create_price(message: types.CallbackQuery):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    ikb=InlineKeyboardMarkup()
    btn1=InlineKeyboardButton("üíª –°–∞–π—Ç",callback_data="buysite")
    btn2 = InlineKeyboardButton("ü§ñ –¢–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç", callback_data="buybot")
    btn3 = InlineKeyboardButton("üíé –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ", callback_data="buyvk")
    btn4 = InlineKeyboardButton("üíø –î–∏–∑–∞–π–Ω —á–µ–≥–æ-–ª–∏–±–æ –¥—Ä—É–≥–æ–≥–æ", callback_data="buydesign")
    ikb.row(btn1).row(btn2).row(btn3).row(btn4)
    png=open(Path(dir_path,"photo","schet.png"),"rb")
    msg = await bot.send_photo(chat_id=message.from_user.id,
                               photo=png,
                               caption="–í—Å–µ–≥–æ –ø–∞—Ä–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Å—ë –ø–æ—Å—á–∏—Ç–∞–µ–º!\n\n"
                                                                    "–ß—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
                               reply_markup=ikb)

    png.close()

    if str(message.from_user.id) not in check_base:
        check_base[str(message.from_user.id)]=""

    await get_time()
    put_msg_base[str(message.from_user.id)]+=(f"{time}: –•–æ—á–µ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ü–µ–Ω—É –ø—Ä–æ–µ–∫—Ç–∞\n")

    last_msg = msg.message_id
    last_msg_base[str(message.from_user.id)] = str(last_msg)

#–†–ê–°–°–ß–ò–¢–ê–¢–¨ –°–ê–ô–¢
@dp.callback_query_handler(text="buysite")
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –•–æ—á–µ—Ç —Å–∞–π—Ç\n")
    check_base[str(message.from_user.id)]+="<b>–£—Å–ª—É–≥–∞</b>: üíª –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–∞\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üíµ –ü—Ä–æ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä", callback_data="buysite_tovar")
    btn12 = InlineKeyboardButton("üí∂ –ü—Ä–æ–¥–∞—Ç—å —É—Å–ª—É–≥—É", callback_data="buysite_usluga")
    btn2 = InlineKeyboardButton("üì± –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="buysite_contacts")
    btn3 = InlineKeyboardButton("üìé –î—Ä—É–≥–æ–µ", callback_data="buysite_more")
    ikb.row(btn12).row(btn1).row(btn2).row(btn3)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                     text=f"–ß—Ç–æ –±—É–¥–µ—Ç –≥–ª–∞–≤–Ω–æ–π —Ü–µ–ª—å—é —Å–∞–π—Ç–∞?",
                                     reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

people_on_uslugi_base={}

#–£–°–õ–£–ì–ò
@dp.callback_query_handler(text='uslugi')
async def uslugi(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    people_on_uslugi_base[str(message.from_user.id)]="0"

    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –ó–∞—à—ë–ª –≤ —É—Å–ª—É–≥–∏\n")

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("< –ù–∞–∑–∞–¥", callback_data="uslugi_back")
    btn2 = InlineKeyboardButton("–î–∞–ª—å—à–µ >", callback_data="uslugi_up")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    btn4 = InlineKeyboardButton('üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å', callback_data="price")
    ikb.add(btn1, btn2).row(btn4).row(btn3)

    photo = open(uslugi_base[people_on_uslugi_base[str(message.from_user.id)]][0], "rb")
    caption = uslugi_base[people_on_uslugi_base[str(message.from_user.id)]][1]

    msg = await bot.send_photo(chat_id=message.from_user.id,
                               photo=photo,
                               caption=caption,
                               reply_markup=ikb)

    photo.close()

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

@dp.callback_query_handler(text=["uslugi_up",
                                 "uslugi_back"])
async def uslugi(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()

    if message.data=="uslugi_up":
        people_on_uslugi_base[str(message.from_user.id)]=str((int(people_on_uslugi_base[str(message.from_user.id)])+1)%len(uslugi_base))
        put_msg_base[str(message.from_user.id)] += (f"{time}: –õ–∏—Å—Ç–Ω—É–ª –¥–∞–ª—å—à–µ \n")
    else:
        if people_on_uslugi_base[str(message.from_user.id)]=="0":
            people_on_uslugi_base[str(message.from_user.id)]=str(len(uslugi_base)-1)
        else:
            people_on_uslugi_base[str(message.from_user.id)] = str((int(people_on_uslugi_base[str(message.from_user.id)])-1)%len(uslugi_base))
        put_msg_base[str(message.from_user.id)] += (f"{time}: –õ–∏—Å—Ç–Ω—É–ª –Ω–∞–∑–∞–¥ \n")



    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("< –ù–∞–∑–∞–¥", callback_data="uslugi_back")
    btn2 = InlineKeyboardButton("–î–∞–ª—å—à–µ >", callback_data="uslugi_up")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    btn4 = InlineKeyboardButton('üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å', callback_data="price")
    ikb.add(btn1, btn2).row(btn4).row(btn3)

    photo = open(uslugi_base[people_on_uslugi_base[str(message.from_user.id)]][0], "rb")
    caption = uslugi_base[people_on_uslugi_base[str(message.from_user.id)]][1]

    msg = await bot.send_photo(chat_id=message.from_user.id,
                               photo=photo,
                               caption=caption,
                               reply_markup=ikb)

    photo.close()

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)


#–ú–ê–®–ò–ù–ê –°–û–°–¢–û–Ø–ù–ò–ô
class StepsForm(StatesGroup):
    get_zadacha=State()
    get_price=State()
    get_date=State()

#–†–∞—Å—Å—á–µ—Ç –¥—Ä—É–≥–æ–µ
@dp.callback_query_handler(text="buydesign")
async def buydesign(message: types.Message):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –•–æ—á–µ—Ç —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ\n")

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–û–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É")

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

    await StepsForm.get_zadacha.set()

@dp.message_handler(state=StepsForm.get_zadacha)
async def get_name(message: types.Message, state: FSMContext):
    await message.delete()
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    zadacha=message.text
    await state.update_data(zadacha=zadacha)
    msg=await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—É—é '–≤–∏–ª–∫—É' –ø—Ä–æ–µ–∫—Ç–∞\n\n"
                         "(–Ω–∞ –∫–∞–∫–æ–π –±—é–¥–∂–µ—Ç —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ?)")
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)
    await StepsForm.get_price.set()

@dp.message_handler(state=StepsForm.get_price)
async def get_name(message: types.Message, state: FSMContext):
    await message.delete()
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    zadacha=message.text
    await state.update_data(vilka=zadacha)
    msg=await message.answer("–í –∫–∞–∫–∏–µ —Å—Ä–æ–∫–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –≥–æ—Ç–æ–≤—É—é —Ä–∞–±–æ—Ç—É?")
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)
    await StepsForm.get_date.set()

@dp.message_handler(state=StepsForm.get_date)
async def get_name(message: types.Message, state: FSMContext):
    await message.delete()
    await bot.delete_message(chat_id=message.from_user.id,message_id=last_msg_base[str(message.from_user.id)])
    zadacha=message.text
    await state.update_data(sroki=zadacha)

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë", callback_data="price")
    btn2 = InlineKeyboardButton("üìé –ö–µ–π—Å—ã", callback_data="cases")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    ikb.row(btn1).row(btn2).row(btn3)

    msg=await message.answer("–û—Ç–ª–∏—á–Ω–æ! –°–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É—Ç–æ—á–Ω–∏—Ç—å –≤—Å–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏",
                             reply_markup=ikb)

    data = await state.get_data()
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)
    await state.finish()

    await statisticbot.send_message(chat_id=admin,
                                    text=f"<b>–∫–ª–∏–µ–Ω—Ç:</b> @{message.from_user.username}\n"
                                         f"<b>–∞–π–¥–∏:</b> {message.from_user.id}\n\n"
                                         f"<b>–∑–∞–¥–∞—á–∞:</b> {data['zadacha']}\n\n"
                                         f"<b>–≤–∏–ª–∫–∞:</b> {data['vilka']}\n\n"
                                         f"<b>—Å—Ä–æ–∫:</b> {data['sroki']}\n\n")

#–†–ê–°–°–ß–ï–¢ –ë–û–¢–ê 1
@dp.callback_query_handler(text="buybot")
async def buybot(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id,message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –•–æ—á–µ—Ç –±–æ—Ç–∞\n")
    check_base[str(message.from_user.id)] += "<b>–£—Å–ª—É–≥–∞</b>: ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç–∞\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üîó C–≤—è–∑—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏", callback_data="buybot_chatbot")
    btn12 = InlineKeyboardButton("üß≥ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤", callback_data="buybot_business")
    btn2 = InlineKeyboardButton("üì± –ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤", callback_data="buybot_magazine")
    btn3 = InlineKeyboardButton("üé¨ –í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂", callback_data="buybot_voronka")
    btn4 = InlineKeyboardButton("üìé –î—Ä—É–≥–æ–µ", callback_data="buybot_more")
    ikb.row(btn12).row(btn1).row(btn2).row(btn3).row(btn4)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–ß—Ç–æ –±—É–¥–µ—Ç –≥–ª–∞–≤–Ω–æ–π —Ü–µ–ª—å—é –±–æ—Ç–∞?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ –ë–û–¢–ê 2
@dp.callback_query_handler(text=["buybot_chatbot",
                                 "buybot_business",
                                 "buybot_magazine",
                                 "buybot_voronka",
                                 "buybot_more"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buybot_chatbot":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –¶–µ–ª—å –±–æ—Ç–∞ - —Å–≤—è–∑—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏\n")
        check_base[str(message.from_user.id)] += "<b>–¶–µ–ª—å –±–æ—Ç–∞</b>: üîó –°–≤—è–∑—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏\n"

    elif message.data=="buybot_business":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –¶–µ–ª—å –±–æ—Ç–∞ - –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n")
        check_base[str(message.from_user.id)] += "<b>–¶–µ–ª—å –±–æ—Ç–∞</b>: üîó –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n"

    elif message.data=="buybot_magazine":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –¶–µ–ª—å –±–æ—Ç–∞ - –ø—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤\n")
        check_base[str(message.from_user.id)] += "<b>–¶–µ–ª—å –±–æ—Ç–∞</b>: üîó –ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤\n"

    elif message.data=="buybot_voronka":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –¶–µ–ª—å –±–æ—Ç–∞ - –≤–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂\n")
        check_base[str(message.from_user.id)] += "<b>–¶–µ–ª—å –±–æ—Ç–∞</b>: üîó –í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂\n"

    elif message.data=="buybot_more":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –¶–µ–ª—å –±–æ—Ç–∞ - –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å\n")
        check_base[str(message.from_user.id)] += "<b>–¶–µ–ª—å –±–æ—Ç–∞</b>: üîó –ü—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ–ø—Ä–µ–ª–¥–µ–ª–∏—Ç—å\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë", callback_data="price")
    btn2 = InlineKeyboardButton("üìé –ö–µ–π—Å—ã", callback_data="cases")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    ikb.row(btn1).row(btn2).row(btn3)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–£—Ñ—Ñ, –Ω–µ–ø–ª–æ—Ö–æ–π –≤—ã–±–æ—Äü¶ç\n\n"
                                      
                                      f"{check_base[str(message.from_user.id)]}\n"
                                      
                                      f"<span class='tg-spoiler'>–ö—Å—Ç–∞—Ç–∏, —Å —Ç–∞–∫–∏–º –±–æ—Ç–æ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ <b>–±–µ—Å–ø–ª–∞—Ç–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b> –¥–∞–∂–µ –±–µ–∑ –∏—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—èü§Ø\n\n"
                                      f"–ê –¥–∞–ª—å—à–µ –º–æ–∂–Ω–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–µ–ª–∞—Ç—å –ø–æ —ç—Ç–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–∞–º <b>–±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–µ–∫–ª–∞–º–Ω—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏</b>\n\n"
            
                                      f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> –æ—Ç 15000 —Ä—É–±–ª–µ–π\n"
                                      f"<b>–°—Ä–æ–∫–∏:</b> –æ—Ç 4 –¥–Ω–µ–π</span>",
                                 reply_markup=ikb)

    await statisticbot.send_message(chat_id=admin, text=f"–ù–æ–≤—ã–π —Ä–∞—Å—Å—á—ë—Ç\n\n"
                                                        f"–∫–ª–∏–µ–Ω—Ç: @{message.from_user.username}\n"
                                                        f"–∞–π–¥–∏: {message.from_user.id}\n\n"
                                                        f"{check_base[str(message.from_user.id)]}")

    check_base[str(message.from_user.id)]=""

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)



#–†–ê–°–°–ß–ï–¢ –í–ö 1
@dp.callback_query_handler(text="buyvk")
async def buybot(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id,message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –•–æ—á–µ—Ç –≥—Ä—É–ø–ø—É –≤ –í–ö\n")
    check_base[str(message.from_user.id)] += "<b>–£—Å–ª—É–≥–∞</b>: üíé –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã –í–∫–æ–Ω—Ç–∞–∫—Ç–µ\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("–î–∞, –º–µ–Ω–µ–µ 10", callback_data="buyvk_menee10")
    btn2 = InlineKeyboardButton("–î–∞, –æ—Ç 10 –¥–æ 30", callback_data="buyvk_1030")
    btn3 = InlineKeyboardButton("–î–∞, –±–æ–ª–µ–µ 30", callback_data="buyvk_bolee30")
    btn4 = InlineKeyboardButton("–ù–µ—Ç, —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –±—É–¥–µ—Ç", callback_data="buyvk_0")

    ikb.row(btn1).row(btn2).row(btn3).row(btn4)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–ë—É–¥—É—Ç –ª–∏ —Ç–æ–≤–∞—Ä—ã –≤ –≥—Ä—É–ø–ø–µ? –ï—Å–ª–∏ –¥–∞, —Ç–æ —Å–∫–æ–ª—å–∫–æ?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

# –†–ê–°–°–ß–ï–¢ –í–ö 2
@dp.callback_query_handler(text=["buyvk_menee10",
                                 "buyvk_1030",
                                 "buyvk_bolee30",
                                 "buyvk_0"])
async def buybot(message: types.CallbackQuery):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()

    if message.data=="buyvk_menee10":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ë—É–¥–µ—Ç –º–µ–Ω–µ–µ 10 —Ç–æ–≤–∞—Ä–æ–≤\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤</b>: –ú–µ–Ω–µ–µ 10\n"
    elif message.data=="buyvk_1030":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ë—É–¥–µ—Ç 10-30 —Ç–æ–≤–∞—Ä–æ–≤\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤</b>: –û—Ç 10 –¥–æ 30\n"
    elif message.data=="buyvk_bolee30":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ë—É–¥–µ—Ç –±–æ–ª–µ–µ 30 —Ç–æ–≤–∞—Ä–æ–≤\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤</b>: –ë–æ–ª–µ–µ 30\n"
    elif message.data=="buyvk_0":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –¢–æ–≤–∞—Ä–æ–≤ –Ω–µ –±—É–¥–µ—Ç\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤</b>: 0\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("‚úÖ –î–∞", callback_data="buyvk_yes")
    btn2 = InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="buyvk_no")

    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–ù—É–∂–µ–Ω –ª–∏ –±—É–¥–µ—Ç –±–æ—Ç –≤–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø—ã?\n\n"
                                      f"–û–Ω –º–æ–∂–µ—Ç, –∫ –ø—Ä–∏–º–µ—Ä—É, —Ä–∞—Å—Å—ã–ª–∞—Ç—å —Ä–µ–∫–ª–∞–º—É –æ—Ç –∏–º–µ–Ω–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

# –†–ê–°–°–ß–ï–¢ –í–ö 3
@dp.callback_query_handler(text=["buyvk_yes",
                                 "buyvk_no"])
async def buybot(message: types.CallbackQuery):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()

    if message.data=="buyvk_yes":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ù—É–∂–µ–Ω –±–æ—Ç –≤–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø—ã\n")
        check_base[str(message.from_user.id)] += "<b>–ë–æ—Ç –≤—Ä–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø—ã</b>: ‚úÖ\n"
    elif message.data=="buyvk_no":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ë–µ–∑ –±–æ—Ç–∞ –≤–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø—ã\n")
        check_base[str(message.from_user.id)] += "<b>–ë–æ—Ç –≤–Ω—É—Ç—Ä–∏ –≥—Ä—É–ø–ø—ã</b>: ‚ùå\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("‚úÖ –î–∞", callback_data="buyvk_yes_1")
    btn2 = InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="buyvk_no_1")

    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–ù—É–∂–Ω–∞ –ª–∏ –±—É–¥–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º?\n\n"
                                      f"–ù–∞–ø—Ä–∏–º–µ—Ä, –¥–∏–∑–∞–π–Ω –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –∏–ª–∏ —Å—Ç–∞—Ç–µ–π",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ –í–ö 4
@dp.callback_query_handler(text=["buyvk_yes_1",
                                 "buyvk_no_1"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buyvk_yes_1":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ù—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n")
        check_base[str(message.from_user.id)] += "<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</b>: ‚úÖ\n"
    elif message.data=="buyvk_no_1":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ù–µ –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n")
        check_base[str(message.from_user.id)] += "<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</b>: ‚ùå\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë", callback_data="price")
    btn2 = InlineKeyboardButton("üìé –ö–µ–π—Å—ã", callback_data="cases")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    ikb.row(btn1).row(btn2).row(btn3)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"‚ò† –ü–æ—Å–ª–µ —Ç–∞–∫–æ–≥–æ —Ç–≤–æ–∏–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º —Ç–æ—á–Ω–æ –ø–∏–∑–¥%—Ü\n\n"
                                      f"{check_base[str(message.from_user.id)]}\n"
                                      
                                      f"<span class='tg-spoiler'>–ë–∏–∑–Ω–µ—Å —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ —Å–∞–º—ã–π –ª—ë–≥–∫–∏–π —Å–ø–æ—Å–æ–± –∑–∞—è–≤–∏—Ç—å –æ —Å–µ–±–µ –≤ —Å–µ—Ç–∏. "
                                      f"–ì–∏–±–∫–∏–π —Ç–∞—Ä–≥–µ—Ç, –æ–≥—Ä–æ–º–Ω–∞—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è –±–∞–∑–∞, –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞\n\n"
                                      f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> –æ—Ç 4990 —Ä—É–±–ª–µ–π\n"
                                      f"<b>–°—Ä–æ–∫–∏:</b> –æ—Ç 3 –¥–Ω–µ–π</span>",
                                 reply_markup=ikb)

    await statisticbot.send_message(chat_id=admin, text=f"–ù–æ–≤—ã–π —Ä–∞—Å—Å—á—ë—Ç\n\n"
                                                        f"–∫–ª–∏–µ–Ω—Ç: @{message.from_user.username}\n"
                                                        f"–∞–π–¥–∏: {message.from_user.id}\n\n"
                                                        f"{check_base[str(message.from_user.id)]}")

    check_base[str(message.from_user.id)]=""

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)



#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –¢–û–í–ê–†–´
@dp.callback_query_handler(text="buysite_tovar")
async def buysite(message: types.CallbackQuery):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –¶–µ–ª—å —Å–∞–π—Ç–∞ - –ø—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤\n")
    check_base[str(message.from_user.id)] += "<b>–¶–µ–ª—å —Å–∞–π—Ç–∞</b>: üíµ –ü—Ä–æ–¥–∞–∂–∞ —Ç–æ–≤–∞—Ä–æ–≤\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("–º–µ–Ω–µ–µ 20", callback_data="buysite_tovar_menee20")
    btn2 = InlineKeyboardButton("20 - 50", callback_data="buysite_tovar_20-50")
    btn3 = InlineKeyboardButton("–±–æ–ª–µ–µ 50", callback_data="buysite_tovar_bolee50")
    ikb.row(btn1).row(btn2).row(btn3)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–°–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ –±—É–¥–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –¢–û–í–ê–†–´ - –ö–û–õ–ò–ß–ï–°–¢–í–û
@dp.callback_query_handler(text=["buysite_tovar_bolee50",
                                 "buysite_tovar_20-50",
                                 "buysite_tovar_menee20"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buysite_tovar_bolee50":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ë–æ–ª–µ–µ 50 —Ç–æ–≤–∞—Ä–æ–≤\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤</b>: –ë–æ–ª–µ–µ 50\n"
    elif message.data=="buysite_tovar_20-50":
        put_msg_base[str(message.from_user.id)] += (f"{time}: 20-50 —Ç–æ–≤–∞—Ä–æ–≤\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤</b>: –û—Ç 20 –¥–æ 50\n"
    elif message.data=="buysite_tovar_menee20":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ú–µ–Ω–µ–µ 20 —Ç–æ–≤–∞—Ä–æ–≤\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤</b>: –ú–µ–Ω–µ–µ 20\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("‚úÖ –¥–∞", callback_data="buysite_tovar_oplata_yes")
    btn2 = InlineKeyboardButton("‚ùå –Ω–µ—Ç", callback_data="buysite_tovar_oplata_no")
    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–ù—É–∂–Ω–∞ –ª–∏ –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –¢–û–í–ê–†–´ - –û–ù–õ–ê–ô–ù –û–ü–õ–ê–¢–ê
@dp.callback_query_handler(text=["buysite_tovar_oplata_no",
                                 "buysite_tovar_oplata_yes"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buysite_tovar_oplata_no":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ë–µ–∑ –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç—ã\n")
        check_base[str(message.from_user.id)] += "<b>–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞</b>: ‚ùå\n"
    elif message.data=="buysite_tovar_oplata_yes":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –° –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–æ–π\n")
        check_base[str(message.from_user.id)] += "<b>–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞</b>: ‚úÖ\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("‚úÖ –¥–∞", callback_data="buysite_tovar_smm_yes")
    btn2 = InlineKeyboardButton("‚ùå –Ω–µ—Ç", callback_data="buysite_tovar_smm_no")
    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å–≤–æ–∏ —Ç–µ–∫—Å—Ç–∞/—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –∏–ª–∏ —Å–º–º—â–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –≤—Å—ë —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –¢–û–í–ê–†–´ - –°–ú–ú–©–ò–ö - –ö–û–ù–ï–¶
@dp.callback_query_handler(text=["buysite_tovar_smm_yes",
                                 "buysite_tovar_smm_no"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buysite_tovar_smm_yes":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ï—Å—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–Ω—Ç–µ–Ω—Ç/—Å–≤–æ–π —Å–º–º—â–∏–∫</b>: ‚úÖ\n"
    elif message.data=="buysite_tovar_smm_no":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ù–µ—Ç —Å–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–Ω—Ç–µ–Ω—Ç/—Å–≤–æ–π —Å–º–º—â–∏–∫</b>: ‚ùå\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë", callback_data="price")
    btn2 = InlineKeyboardButton("üìé –ö–µ–π—Å—ã", callback_data="cases")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    ikb.row(btn1).row(btn2).row(btn3)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–£–∂–µ –≥–æ—Ç–æ–≤–∏–º –º–æ—â—â—â–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µüíΩ\n\n"
                                      
                                      f"{check_base[str(message.from_user.id)]}\n"
                                      
                                      f"<span class='tg-spoiler'>–°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º —Å —à–∞–±–ª–æ–Ω–Ω—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏. –ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å 10 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–æ–¥–∞, –ø—Ä–æ–≤–æ–¥–∏–º 30 —á–∞—Å–æ–≤ –∑–∞ –∞–Ω–∞–ª–∏–∑–æ–º –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –±—É–¥–µ—Ç —Ä–µ—à–∞—Ç—å. –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ —Å—Ä–æ–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª –∫–∞–∫ —à–≤–µ–π—Ü–∞—Ä—Å–∫–∏–µ —á–∞—Å—ã.\n\n"
                                      f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> –æ—Ç 35000 —Ä—É–±–ª–µ–π\n"
                                      f"<b>–°—Ä–æ–∫–∏:</b> –æ—Ç 7 –¥–Ω–µ–π</span>",
                                 reply_markup=ikb)

    await statisticbot.send_message(chat_id=admin, text=f"–ù–æ–≤—ã–π —Ä–∞—Å—Å—á—ë—Ç\n\n"
                                                        f"–∫–ª–∏–µ–Ω—Ç: @{message.from_user.username}\n"
                                                        f"–∞–π–¥–∏: {message.from_user.id}\n\n"
                                                        f"{check_base[str(message.from_user.id)]}")

    check_base[str(message.from_user.id)]=""

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)




#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –£–°–õ–£–ì–ò - –ù–ê–ß–ê–õ–û
@dp.callback_query_handler(text="buysite_usluga")
async def buysite(message: types.CallbackQuery):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –¶–µ–ª—å —Å–∞–π—Ç–∞ - –ø—Ä–æ–¥–∞–∂–∞ —É—Å–ª—É–≥\n")
    check_base[str(message.from_user.id)] += "<b>–¶–µ–ª—å —Å–∞–π—Ç–∞</b>: üíµ –ü—Ä–æ–¥–∞–∂–∞ —É—Å–ª—É–≥\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("–º–µ–Ω–µ–µ 10", callback_data="buysite_usluga_menee10")
    btn2 = InlineKeyboardButton("–±–æ–ª–µ–µ 10", callback_data="buysite_usluga_bolee10")
    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–°–∫–æ–ª—å–∫–æ —É—Å–ª—É–≥ –±—É–¥–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –¢–û–í–ê–†–´ - –û–ü–õ–ê–¢–ê
@dp.callback_query_handler(text=["buysite_usluga_bolee10",
                                 "buysite_usluga_menee10"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buysite_usluga_bolee10":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ë–æ–ª–µ–µ 10 —É—Å–ª—É–≥\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥</b>: –ë–æ–ª–µ–µ 10\n"
    elif message.data=="buysite_usluga_menee10":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ú–µ–Ω–µ–µ 10 —É—Å–ª—É–≥\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ª—É–≥</b>: –ú–µ–Ω–µ–µ 10\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("‚úÖ –¥–∞", callback_data="buysite_usluga_oplata_yes")
    btn2 = InlineKeyboardButton("‚ùå –Ω–µ—Ç", callback_data="buysite_usluga_oplata_no")
    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–ù—É–∂–Ω–∞ –ª–∏ –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –¢–û–í–ê–†–´ - –û–ù–õ–ê–ô–ù –û–ü–õ–ê–¢–ê
@dp.callback_query_handler(text=["buysite_usluga_oplata_no",
                                 "buysite_usluga_oplata_yes"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buysite_usluga_oplata_no":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ë–µ–∑ –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç—ã\n")
        check_base[str(message.from_user.id)] += "<b>–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞</b>: ‚ùå\n"
    elif message.data=="buysite_usluga_oplata_yes":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –° –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–æ–π\n")
        check_base[str(message.from_user.id)] += "<b>–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞</b>: ‚úÖ\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("‚úÖ –¥–∞", callback_data="buysite_usluga_smm_yes")
    btn2 = InlineKeyboardButton("‚ùå –Ω–µ—Ç", callback_data="buysite_usluga_smm_no")
    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å–≤–æ–∏ —Ç–µ–∫—Å—Ç–∞/—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –∏–ª–∏ —Å–º–º—â–∏–∫ –∫–æ—Ç–æ—Ä—ã–π –≤—Å—ë —ç—Ç–æ —Å–¥–µ–ª–∞–µ—Ç?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –¢–û–í–ê–†–´ - –°–ú–ú–©–ò–ö - –ö–û–ù–ï–¶
@dp.callback_query_handler(text=["buysite_usluga_smm_yes",
                                 "buysite_usluga_smm_no"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buysite_usluga_smm_yes":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ï—Å—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–Ω—Ç–µ–Ω—Ç/—Å–≤–æ–π —Å–º–º—â–∏–∫</b>: ‚úÖ\n"
    elif message.data=="buysite_usluga_smm_no":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ù–µ—Ç —Å–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–Ω—Ç–µ–Ω—Ç/—Å–≤–æ–π —Å–º–º—â–∏–∫</b>: ‚ùå\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë", callback_data="price")
    btn2 = InlineKeyboardButton("üìé –ö–µ–π—Å—ã", callback_data="cases")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    ikb.row(btn1).row(btn2).row(btn3)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–£–∂–µ –≥–æ—Ç–æ–≤–∏–º –º–æ—â—â—â–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µüíΩ\n\n"
                                      
                                      f"{check_base[str(message.from_user.id)]}\n"
                                      
                                      f"<span class='tg-spoiler'>–°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º —Å —à–∞–±–ª–æ–Ω–Ω—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏. –ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å 10 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–æ–¥–∞, –ø—Ä–æ–≤–æ–¥–∏–º 30 —á–∞—Å–æ–≤ –∑–∞ –∞–Ω–∞–ª–∏–∑–æ–º –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –±—É–¥–µ—Ç —Ä–µ—à–∞—Ç—å. –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ —Å—Ä–æ–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª –∫–∞–∫ —à–≤–µ–π—Ü–∞—Ä—Å–∫–∏–µ —á–∞—Å—ã.\n\n"
                                      f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> –æ—Ç 35000 —Ä—É–±–ª–µ–π\n"
                                      f"<b>–°—Ä–æ–∫–∏:</b> –æ—Ç 7 –¥–Ω–µ–π</span>",
                                 reply_markup=ikb)

    await statisticbot.send_message(chat_id=admin, text=f"–ù–æ–≤—ã–π —Ä–∞—Å—Å—á—ë—Ç\n\n"
                                                        f"–∫–ª–∏–µ–Ω—Ç: @{message.from_user.username}\n"
                                                        f"–∞–π–¥–∏: {message.from_user.id}\n\n"
                                                        f"{check_base[str(message.from_user.id)]}")

    check_base[str(message.from_user.id)]=""

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)



#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –ö–û–ù–¢–ê–ö–¢–´ - 1
@dp.callback_query_handler(text="buysite_contacts")
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –¶–µ–ª—å —Å–∞–π—Ç–∞ - –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã\n")
    check_base[str(message.from_user.id)] += "<b>–¶–µ–ª—å —Å–∞–π—Ç–∞</b>: üì± –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("‚úÖ –ï—Å—Ç—å", callback_data="buysite_contacts_yes")
    btn2 = InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="buysite_contacts_no")
    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å–≤–æ–π —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –∫–æ–Ω—Ç–µ–Ω—Ç?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –ö–û–ù–¢–ê–ö–¢–´ - 2
@dp.callback_query_handler(text=["buysite_contacts_yes",
                                 "buysite_contacts_no"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buysite_contacts_yes":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ï—Å—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–Ω—Ç–µ–Ω—Ç</b>: ‚úÖ\n"
    elif message.data=="buysite_contacts_no":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ù–µ—Ç —Å–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–Ω—Ç–µ–Ω—Ç</b>: ‚ùå\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("‚úÖ –î–∞", callback_data="buysite_contacts_utp_yes")
    btn2 = InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="buysite_contacts_utp_no")
    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–í—ã —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ —Å–≤–æ—é —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é, –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –£–¢–ü?",
                                 reply_markup=ikb)

    await statisticbot.send_message(chat_id=admin, text=f"–ù–æ–≤—ã–π —Ä–∞—Å—Å—á—ë—Ç\n\n"
                                                        f"–∫–ª–∏–µ–Ω—Ç: @{message.from_user.username}\n"
                                                        f"–∞–π–¥–∏: {message.from_user.id}\n\n"
                                                        f"{check_base[str(message.from_user.id)]}")


    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –ö–û–ù–¢–ê–ö–¢–´ - 3 - –ö–û–ù–ï–¶
@dp.callback_query_handler(text=["buysite_contacts_utp_yes",
                                 "buysite_contacts_utp_no"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buysite_contacts_utp_yes":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ï—Å—Ç—å —É—Ç–ø, –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ç.–¥\n")
        check_base[str(message.from_user.id)] += "<b>–¶–ê, –£–¢–ü –∏ —Ç.–¥</b>: ‚úÖ\n"
    elif message.data=="buysite_contacts_utp_no":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ù–µ—Ç —Å–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n")
        check_base[str(message.from_user.id)] += "<b>–¶–ê, –£–¢–ü –∏ —Ç.–¥</b>: ‚ùå\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë", callback_data="price")
    btn2 = InlineKeyboardButton("üìé –ö–µ–π—Å—ã", callback_data="cases")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    ikb.row(btn1).row(btn2).row(btn3)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–£–∂–µ –≥–æ—Ç–æ–≤–∏–º –º–æ—â—â—â–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µüíΩ\n\n"
                                      
                                      f"{check_base[str(message.from_user.id)]}\n"
                                      
                                      f"<span class='tg-spoiler'>–°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º —Å —à–∞–±–ª–æ–Ω–Ω—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏. –ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å 10 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–æ–¥–∞, –ø—Ä–æ–≤–æ–¥–∏–º 30 —á–∞—Å–æ–≤ –∑–∞ –∞–Ω–∞–ª–∏–∑–æ–º –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –±—É–¥–µ—Ç —Ä–µ—à–∞—Ç—å. –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ —Å—Ä–æ–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª –∫–∞–∫ —à–≤–µ–π—Ü–∞—Ä—Å–∫–∏–µ —á–∞—Å—ã.\n\n"
                                      f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> –æ—Ç 35000 —Ä—É–±–ª–µ–π\n"
                                      f"<b>–°—Ä–æ–∫–∏:</b> –æ—Ç 7 –¥–Ω–µ–π</span>",
                                 reply_markup=ikb)

    await statisticbot.send_message(chat_id=admin, text=f"–ù–æ–≤—ã–π —Ä–∞—Å—Å—á—ë—Ç\n\n"
                                                        f"–∫–ª–∏–µ–Ω—Ç: @{message.from_user.username}\n"
                                                        f"–∞–π–¥–∏: {message.from_user.id}\n\n"
                                                        f"{check_base[str(message.from_user.id)]}")

    check_base[str(message.from_user.id)]=""

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)



#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –î–†–£–ì–û–ï - 1
@dp.callback_query_handler(text="buysite_more")
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –¶–µ–ª—å —Å–∞–π—Ç–∞ - –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å\n")
    check_base[str(message.from_user.id)] += "<b>–¶–µ–ª—å —Å–∞–π—Ç–∞</b>: üì± –ü—Ä–µ–¥—Å—Ç–æ–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("‚úÖ –ï—Å—Ç—å", callback_data="buysite_more_yes")
    btn2 = InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="buysite_more_no")
    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å —Å–≤–æ–π —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –∫–æ–Ω—Ç–µ–Ω—Ç?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –î–†–£–ì–û–ï - 2
@dp.callback_query_handler(text=["buysite_more_yes",
                                 "buysite_more_no"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buysite_contacts_yes":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ï—Å—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–Ω—Ç–µ–Ω—Ç</b>: ‚úÖ\n"
    elif message.data=="buysite_contacts_no":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ù–µ—Ç —Å–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n")
        check_base[str(message.from_user.id)] += "<b>–ö–æ–Ω—Ç–µ–Ω—Ç</b>: ‚ùå\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("‚úÖ –î–∞", callback_data="buysite_more_utp_yes")
    btn2 = InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="buysite_more_utp_no")
    ikb.row(btn1).row(btn2)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–í—ã —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ —Å–≤–æ—é —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é, –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –£–¢–ü?",
                                 reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

#–†–ê–°–°–ß–ï–¢ - –°–ê–ô–¢ - –î–†–£–ì–û–ï - 3 - –ö–û–ù–ï–¶
@dp.callback_query_handler(text=["buysite_more_utp_yes",
                                 "buysite_more_utp_no"])
async def buysite(message: types.CallbackQuery):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    if message.data=="buysite_more_utp_yes":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ï—Å—Ç—å —É—Ç–ø, –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ç.–¥\n")
        check_base[str(message.from_user.id)] += "<b>–¶–ê, –£–¢–ü –∏ —Ç.–¥</b>: ‚úÖ\n"
    elif message.data=="buysite_more_utp_no":
        put_msg_base[str(message.from_user.id)] += (f"{time}: –ù–µ—Ç —Å–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n")
        check_base[str(message.from_user.id)] += "<b>–¶–ê, –£–¢–ü –∏ —Ç.–¥</b>: ‚ùå\n"

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –µ—â—ë", callback_data="price")
    btn2 = InlineKeyboardButton("üìé –ö–µ–π—Å—ã", callback_data="cases")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    ikb.row(btn1).row(btn2).row(btn3)

    msg = await bot.send_message(chat_id=message.from_user.id,
                                 text=f"–£–∂–µ –≥–æ—Ç–æ–≤–∏–º –º–æ—â—â—â–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µüíΩ\n\n"
                                      
                                      f"{check_base[str(message.from_user.id)]}\n"
                                      
                                      f"<span class='tg-spoiler'>–°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º —Å —à–∞–±–ª–æ–Ω–Ω—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏. –ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å 10 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–æ–¥–∞, –ø—Ä–æ–≤–æ–¥–∏–º 30 —á–∞—Å–æ–≤ –∑–∞ –∞–Ω–∞–ª–∏–∑–æ–º –∑–∞–¥–∞—á, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω –±—É–¥–µ—Ç —Ä–µ—à–∞—Ç—å. –ó–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ —Å—Ä–æ–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç, —á—Ç–æ–±—ã –æ–Ω —Ä–∞–±–æ—Ç–∞–ª –∫–∞–∫ —à–≤–µ–π—Ü–∞—Ä—Å–∫–∏–µ —á–∞—Å—ã.\n\n"
                                      f"<b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> –æ—Ç 35000 —Ä—É–±–ª–µ–π\n"
                                      f"<b>–°—Ä–æ–∫–∏:</b> –æ—Ç 7 –¥–Ω–µ–π</span>",
                                 reply_markup=ikb)

    await statisticbot.send_message(chat_id=admin, text=f"–ù–æ–≤—ã–π —Ä–∞—Å—Å—á—ë—Ç\n\n"
                                                        f"–∫–ª–∏–µ–Ω—Ç: @{message.from_user.username}\n"
                                                        f"–∞–π–¥–∏: {message.from_user.id}\n\n"
                                                        f"{check_base[str(message.from_user.id)]}")

    check_base[str(message.from_user.id)]=""

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

class Reklama(StatesGroup):
    reklama_text=State()
    reklama_photo=State()

async def reklama(message: types.Message):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    msg=await bot.send_message(chat_id=message.from_user.id, text="–û—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

    await Reklama.reklama_text.set()

@dp.message_handler(state=Reklama.reklama_text)
async def reklama_text(message: types.Message,state: FSMContext):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    await message.delete()
    await state.update_data(reklama_text=message.text)

    msg = await bot.send_message(chat_id=message.from_user.id, text="–°–∫–∏–Ω—å —Ñ–æ—Ç–æ —Ñ–∞–π–ª–æ–º")
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

    await Reklama.reklama_photo.set()

reklama_base=["","photo.png"]
@dp.message_handler(state=Reklama.reklama_photo,content_types=ContentType.DOCUMENT)
async def reklama_text(message: types.Message, state: FSMContext):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    await message.delete()

    await message.document.download(destination_file=Path(dir_path, "photo.png"))

    await state.update_data(photo_place=Path(dir_path, "photo.png"))

    data = await state.get_data()
    await state.finish()

    reklama_base[0]=data["reklama_text"]
    photo=open(data["photo_place"],"rb")
    ikb=InlineKeyboardMarkup()
    btn1=InlineKeyboardButton(f"–û—Ç–ø—Ä–∞–≤–∏—Ç—å {len(id_base)} –ª—é–¥—è–º",callback_data="send_reklama")
    btn2=InlineKeyboardButton("–ó–∞–Ω–æ–≤–æ",callback_data="repeat_reklama")
    ikb.add(btn1).row(btn2)

    msg = await bot.send_photo(chat_id=message.from_user.id,
                               photo=photo,
                               caption=data["reklama_text"],
                               reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

@dp.callback_query_handler(text="repeat_reklama")
async def repeat_reklama(message: types.Message):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    msg = await bot.send_message(chat_id=admin,text="—Ä–∞–±–æ—Ç–∞—é —Å—ç—Ä")
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)
    await reklama(message)

@dp.callback_query_handler(text="send_reklama")
async def send_reklama(message: types.Message):

    ikb = InlineKeyboardMarkup()
    btn1=InlineKeyboardButton("ü´Ä –ù–∞—à–∏ —É—Å–ª—É–≥–∏", callback_data="uslugi")
    btn4 = InlineKeyboardButton('üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å', callback_data="price")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    ikb.row(btn1).row(btn4).row(btn3)
    for i in id_base:

        if str(i) in last_msg_base:
            await bot.delete_message(chat_id=i, message_id=last_msg_base[str(i)])

        msg = await bot.send_photo(chat_id=str(i),
                                   photo=open(reklama_base[1], "rb"),
                                   caption=reklama_base[0],
                                   reply_markup=ikb)
        last_msg_base[str(i)] = str(msg.message_id)


    await statisticbot.send_message(chat_id=admin,
                                    text="–†–µ–∫–ª–∞–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")


people_on_case_base={}

@dp.callback_query_handler(text=["cases"])
async def cases(message:types.CallbackQuery):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –ó–∞—à—ë–ª –≤ –∫–µ–π—Å—ã\n")

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("< –ù–∞–∑–∞–¥", callback_data="cases_back")
    btn2 = InlineKeyboardButton("–î–∞–ª—å—à–µ >", callback_data="cases_up")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    btn4 = InlineKeyboardButton('üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å', callback_data="price")
    ikb.add(btn1,btn2).row(btn4).row(btn3)

    people_on_case_base[str(message.from_user.id)]="0"

    photo=open(cases_base[people_on_case_base[str(message.from_user.id)]][0],"rb")
    caption=cases_base[people_on_case_base[str(message.from_user.id)]][1]

    msg = await bot.send_photo(chat_id=message.from_user.id,
                         photo=photo,
                         caption=caption,
                         reply_markup=ikb)


    photo.close()

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

@dp.callback_query_handler(text=["cases_up"])
async def cases(message: types.CallbackQuery):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –õ–∏—Å—Ç–Ω—É–ª –¥–∞–ª—å—à–µ\n")

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("< –ù–∞–∑–∞–¥", callback_data="cases_back")
    btn2 = InlineKeyboardButton("–î–∞–ª—å—à–µ >", callback_data="cases_up")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    btn4 = InlineKeyboardButton('üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å', callback_data="price")
    ikb.add(btn1, btn2).row(btn4).row(btn3)

    people_on_case_base[str(message.from_user.id)] = str(int(people_on_case_base[str(message.from_user.id)]) + 1)

    if int(people_on_case_base[str(message.from_user.id)]) > len(cases_base)-1:
        people_on_case_base[str(message.from_user.id)] = "0"

    if int(people_on_case_base[str(message.from_user.id)]) < 0:
        people_on_case_base[str(message.from_user.id)] = str(len(cases_base) - 1)

    photo = open(cases_base[people_on_case_base[str(message.from_user.id)]][0], "rb")
    caption = cases_base[people_on_case_base[str(message.from_user.id)]][1]

    msg = await bot.send_photo(chat_id=message.from_user.id,
                               photo=photo,
                               caption=caption,
                               reply_markup=ikb)

    photo.close()

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

@dp.callback_query_handler(text=["cases_back"])
async def cases(message: types.CallbackQuery):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await get_time()
    put_msg_base[str(message.from_user.id)] += (f"{time}: –õ–∏—Å—Ç–Ω—É–ª –Ω–∞–∑–∞–¥\n")

    ikb = InlineKeyboardMarkup()
    btn1 = InlineKeyboardButton("< –ù–∞–∑–∞–¥", callback_data="cases_back")
    btn2 = InlineKeyboardButton("–î–∞–ª—å—à–µ >", callback_data="cases_up")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    btn4 = InlineKeyboardButton('üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å', callback_data="price")
    ikb.add(btn1, btn2).row(btn4).row(btn3)

    people_on_case_base[str(message.from_user.id)] = str(int(people_on_case_base[str(message.from_user.id)]) - 1)

    if int(people_on_case_base[str(message.from_user.id)]) > len(cases_base)-1:
        people_on_case_base[str(message.from_user.id)] = "0"

    if int(people_on_case_base[str(message.from_user.id)]) < 0:
        people_on_case_base[str(message.from_user.id)] = str(len(cases_base)-1)

    photo = open(cases_base[people_on_case_base[str(message.from_user.id)]][0], "rb")
    caption = cases_base[people_on_case_base[str(message.from_user.id)]][1]

    msg = await bot.send_photo(chat_id=message.from_user.id,
                               photo=photo,
                               caption=caption,
                               reply_markup=ikb)

    photo.close()

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

from cases import dir_path
#–ó–ê–ì–†–£–ó–ö–ê –ê–ô–î–ò–®–ù–ò–ö–û–í
@dp.message_handler(content_types=ContentType.DOCUMENT)
async def base_in(doc: types.Message):
    await bot.delete_message(chat_id=doc.from_user.id, message_id=last_msg_base[str(doc.from_user.id)])
    await doc.delete()
    file = await doc.document.download(destination_file=Path(dir_path,"users.txt"))
    for i in open("users.txt"):
        if i not in id_base and int(i) not in id_base:
            id_base.append(i.replace("\n",""))
    await statisticbot.send_message(chat_id=admin,text="–ë–∞–∑–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    msg = await bot.send_message(chat_id=doc.from_user.id,text="–ë–∞–∑–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
    last_msg_base[str(doc.from_user.id)] = str(msg.message_id)
    await create_file()
    await statisticbot.send_document(chat_id=admin, document=open("idfile.txt", "rb"))


class Msg(StatesGroup):
    id_msg=State()
    text_msg=State()

async def send_msg(message):
    await message.delete()
    base="".join([str(i)+'\n' for i in id_base])
    if message.from_user.id==admin:
        await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
        msg=await message.answer(f"–í–≤–µ–¥–∏ –∞–π–¥–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è\n\n <code>{base}</code>")
        last_msg_base[str(message.from_user.id)] = str(msg.message_id)
    else:
        await start()

    await Msg.id_msg.set()

@dp.message_handler(state=Msg.id_msg)
async def send_msg1(message: types.Message, state: FSMContext):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await message.delete()

    await state.update_data(id_user=message.text)

    msg=await message.answer("–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

    await Msg.text_msg.set()

@dp.message_handler(state=Msg.text_msg)
async def send_msg2(message: types.Message, state: FSMContext):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    await message.delete()

    await state.update_data(text_msg=message.text)
    data = await state.get_data()
    await state.finish()

    msg = await bot.send_message(chat_id=data["id_user"],text=data["text_msg"])

    last_msg_base[str(data["id_user"])] = str(msg.message_id)

    msg = await statisticbot.send_message(chat_id=admin,
                                          text=f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ\n\n"
                                               f"<b>–ø–æ–ª—É—á–∞—Ç–µ–ª—å</b>: <code>{data['id_user']}</code>\n"
                                               f"<b>—Ç–µ–∫—Å—Ç</b>: {data['text_msg']}")
    msg=await bot.send_message(chat_id=message.from_user.id,text="–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)



class PersonalReklama(StatesGroup):
    reklama_text=State()
    reklama_id=State()
    reklama_photo=State()

async def personal_reklama(message: types.Message):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])

    msg=await bot.send_message(chat_id=message.from_user.id, text="–û—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

    await PersonalReklama.reklama_text.set()

@dp.message_handler(state=PersonalReklama.reklama_text)
async def personal_id(message: types.Message,state:FSMContext):

    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    await state.update_data(text=message.text)
    msg=await bot.send_message(chat_id=message.from_user.id, text="–û—Ç–ø—Ä–∞–≤—å id –ø–æ–ª—É—á–∞—Ç–µ–ª—è")
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

    await PersonalReklama.reklama_id.set()

@dp.message_handler(state=PersonalReklama.reklama_id)
async def reklama_text(message: types.Message,state: FSMContext):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    await message.delete()
    await state.update_data(id=message.text)

    msg = await bot.send_message(chat_id=message.from_user.id, text="–°–∫–∏–Ω—å —Ñ–æ—Ç–æ —Ñ–∞–π–ª–æ–º")
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

    await PersonalReklama.reklama_photo.set()

personal_reklama_base=["","photo.png",""]
@dp.message_handler(state=PersonalReklama.reklama_photo,content_types=ContentType.DOCUMENT)
async def reklama_text(message: types.Message, state: FSMContext):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    await message.delete()

    await message.document.download(destination_file=Path(dir_path, "photo.png"))

    await state.update_data(photo_place=Path(dir_path, "photo.png"))

    data = await state.get_data()
    await state.finish()
    personal_reklama_base[2]=data["id"]
    personal_reklama_base[0]=str(data["text"])
    photo=open(data["photo_place"],"rb")
    ikb=InlineKeyboardMarkup()
    btn1=InlineKeyboardButton(f"–û—Ç–ø—Ä–∞–≤–∏—Ç—å {data['id']}",callback_data="send_reklama_personal")
    btn2=InlineKeyboardButton("–ó–∞–Ω–æ–≤–æ",callback_data="repeat_reklama_personal")
    ikb.add(btn1).row(btn2)

    msg = await bot.send_photo(chat_id=message.from_user.id,
                               photo=photo,
                               caption=data["text"],
                               reply_markup=ikb)

    last_msg_base[str(message.from_user.id)] = str(msg.message_id)

@dp.callback_query_handler(text="repeat_reklama_personal")
async def repeat_reklama(message: types.Message):
    await bot.delete_message(chat_id=message.from_user.id, message_id=last_msg_base[str(message.from_user.id)])
    msg = await bot.send_message(chat_id=admin,text="—Ä–∞–±–æ—Ç–∞—é —Å—ç—Ä")
    last_msg_base[str(message.from_user.id)] = str(msg.message_id)
    await personal_reklama(message)

@dp.callback_query_handler(text="send_reklama_personal")
async def send_reklama(message: types.Message):

    ikb = InlineKeyboardMarkup()
    btn1=InlineKeyboardButton("ü´Ä –ù–∞—à–∏ —É—Å–ª—É–≥–∏", callback_data="uslugi")
    btn4 = InlineKeyboardButton('üßÆ –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å', callback_data="price")
    btn3 = InlineKeyboardButton("üó∫ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="mainmenu")
    ikb.row(btn1).row(btn4).row(btn3)

    if str(personal_reklama_base[2]) in last_msg_base:
        await bot.delete_message(chat_id=personal_reklama_base[2], message_id=last_msg_base[str(personal_reklama_base[2])])

    msg = await bot.send_photo(chat_id=str(personal_reklama_base[2]),
                                photo=open(reklama_base[1], "rb"),
                                caption=personal_reklama_base[0],
                                reply_markup=ikb)
    last_msg_base[str(personal_reklama_base[2])] = str(msg.message_id)


    await statisticbot.send_message(chat_id=admin,
                                    text="–†–µ–∫–ª–∞–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")

#–¢–ï–ö–°–¢–û–í–´–ï –ö–û–ú–ê–ù–î–´
@dp.message_handler()
async def menu(message: types.Message):
    if message.text=="üîó–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await start(message)

    if message.from_user.id==admin:
        if message.text=="users":
            await create_file()
            await statisticbot.send_document(chat_id=admin, document=open("idfile.txt", "rb"))
            await statisticbot.send_document(chat_id=admin, document=open("userfile.txt", "rb"))

        elif message.text=="cjm":
            await message.delete()
            await get_put()
            await statisticbot.send_document(chat_id=admin, document=open("cjm.txt", "rb"))

        elif message.text=="reklama":
            await message.delete()
            await reklama(message)

        elif message.text == "msg":
            await send_msg(message)

        elif message.text=="personal":
            await personal_reklama(message)

        else:
            for i in id_base:
                await bot.send_message(chat_id=i,text=message.text)
            await statisticbot.send_message(chat_id=admin,text=f"–°–æ–æ–±—â–µ–Ω–∏–µ - {message.text} - –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {len(id_base)} –ª—é–¥—è–º")

    else:
        await statisticbot.send_message(chat_id=admin, text=f"<b>–æ—à–∏–±–∫–∞:</b> {message.text}\n"
                                                                   f"<b>–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{message.from_user.username}\n"
                                                                   f"<b>–∞–π–¥–∏:</b> <code>{message.from_user.id}</code>")


if __name__=="__main__":
    executor.start_polling(dispatcher=dp,skip_updates=True)

